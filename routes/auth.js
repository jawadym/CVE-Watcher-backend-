const fetch = require('node-fetch');
const router = require('express').Router();

// getting token
router.post('/', async(req, res) => {
    try {
        const { tenantId, clientId, clientSecret } = req.body
        const params = new URLSearchParams();

        params.append("grant_type", "client_credentials")
        params.append("client_id", clientId)
        params.append("resource", "https://api.loganalytics.io")
        params.append("client_secret", clientSecret)

        fetch(`https://login.microsoftonline.com/${tenantId}/oauth2/token`, {
                method: 'post',
                body: params,
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            })
            .then(res => res.json())
            .then(({ access_token }) => { access_token ? res.send({ token: access_token }) : res.status(401) });


    } catch (e) {
        console.error(e.message)
        res.status(500)
    }
})

// token verification
router.post("/tokenValid", async(req, res) => {
    try {
        const { authToken, workspaceId } = req.body
        const auth = "Bearer " + authToken
        const body = {
            "query": "ConfigurationData | where ConfigDataType == 'Software' | project Computer, SoftwareType, SoftwareName, Publisher, CurrentVersion"
        }
        fetch(`https://api.loganalytics.io/v1/workspaces/${workspaceId}/query`, {
                method: 'post',
                body: JSON.stringify(body),
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": auth
                },
            })
            .then(res => res.json())
            .then(({ tables }) => {
                res.send({
                    status: tables ? true : false
                })
            });

    } catch (e) {
        console.error(e.message)
        res.status(500)
    }
})

module.exports = router;