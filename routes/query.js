const fetch = require('node-fetch');
const router = require('express').Router();
const cveFind = require('../utils/cveFind')
const fs = require('fs');

router.post("/software", async(req, res) => {

    try {
        const { authToken, workspaceId } = req.body
        const auth = "Bearer " + authToken
        const body = {
            "query": "ConfigurationData | where ConfigDataType == 'Software'| where SoftwareType == 'Application' | project strcat(SourceComputerId, ' ' ,Computer) , SoftwareName, CurrentVersion"
        }
        fetch(`https://api.loganalytics.io/v1/workspaces/${workspaceId}/query`, {
                method: 'post',
                body: JSON.stringify(body),
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": auth
                },
            })
            .then(res => res.json())
            .then((data) => {
                res.send(data)
            });

    } catch (e) {
        console.error(e.message)
        res.status(500)
    }
})


router.post("/instanceCount", async(req, res) => {
    try {
        const { authToken, workspaceId } = req.body
        const auth = "Bearer " + authToken
        const body = {
            "query": "ConfigurationData | where ConfigDataType == 'Software'| project SourceComputerId | distinct SourceComputerId"
        }
        fetch(`https://api.loganalytics.io/v1/workspaces/${workspaceId}/query`, {
                method: 'post',
                body: JSON.stringify(body),
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": auth
                },
            })
            .then(res => res.json())
            .then((data) => {
                res.send({
                    instanceCount: data.tables[0].rows.length
                })
            });
    } catch (error) {
        res.status(500)
    }
})

router.post("/heartbeatCount", async(req, res) => {
    try {
        const { authToken, workspaceId } = req.body
        const auth = "Bearer " + authToken
        const body = {
            "query": "Heartbeat| count"
        }
        fetch(`https://api.loganalytics.io/v1/workspaces/${workspaceId}/query`, {
                method: 'post',
                body: JSON.stringify(body),
                headers: {
                    'Content-Type': 'application/json',
                    "Authorization": auth
                },
            })
            .then(res => res.json())
            .then((data) => {
                res.send({
                    heartbeatCount: data.tables[0].rows[0][0]
                })
            });
    } catch (error) {
        res.status(500)
    }
})

router.post("/fetchCVE", async(req, res) => {
    try {
        let results = await cveFind(req.body)
        res.send(results)


    } catch (e) {
        console.error(e.message)
        res.status(500)
    }
})


router.get("/fetchNewest", async(req, res) => {
    try {
        fetch(`https://www.tenable.com/cve/api/v1?sort=newest&page=1`)
            .then(res => res.json())
            .then((data) => {
                res.send(data)
            });
    } catch (e) {
        res.status(500)
    }
})


module.exports = router;